//---------------------------------------------------------------------------------------------------------------------------
// aldigi stringin sayi olup olmadigini döndüren method yaziniz
// Method - 11

public static boolean girdiSayiMi(String str){




//---------------------------------------------------------------------------------------------------------------------------
// getLength() isminde bir method oluşturun.
// Parametre olarak String ArrayList
// Return tipi Integer ArrayList
// ArrayList içindeki her bir Stringin uzunluğunu bulunuz.
// Tüm elementlerin uzunluğunu döndürün
// Örneğin;	ArrayList  :  "New jersey" ,"New york" , "Ohio" , "Florida" , "Boston"
// Tüm Stringlerin uzunluklarını yazdırın;	cevap: 10 ,  8 , 4 , 7 , 6 olmalı

public static ArrayList<Integer> getLength(ArrayList<String> arrList){




//---------------------------------------------------------------------------------------------------------------------------
// getSum() isminde bir method oluşturun.
// Parametresi ArrayList olmalı
// Return tipi int olmalı.
// ArrayList teki tüm sayıları birbiri ile toplayın.
// return olarak toplam sonucu döndürün.
// Örneğin;	Arraylist = 1,2,3,4,5	return 15 olmalı

public static int getSum(ArrayList<Integer> arrList){



//---------------------------------------------------------------------------------------------------------------------------
// rotateList() isminde bir method oluşturun.
// Parametre olarak String ArrayList
// ArrayList'in dizilişini terse döndürün. (Tersten yazdırın)
// Tersten yazılmış halini return edin.
// Arraylist =  "New jersey" ,"New york" , "Atlanta", "Florida" ,"Ohio"
// cevap: "Ohio" , "Florida" ,"Atlanta","New york" ,"New jersey"

public static ArrayList<String> rotateList(ArrayList<String> arrList){





//---------------------------------------------------------------------------------------------------------------------------
public int[] seriesUp(int n) {

	return null;
}


Given n>=0, create an array with the pattern {1,    1, 2,    1, 2, 3,   ... 1, 2, 3 .. n}
(spaces added to show the grouping). Note that the length of the array will be 1 + 2 + 3 ... + n,
which is known to sum to exactly n*(n + 1)/2.

seriesUp(3) → [1, 1, 2, 1, 2, 3]
seriesUp(4) → [1, 1, 2, 1, 2, 3, 1, 2, 3, 4]
seriesUp(2) → [1, 1, 2]
